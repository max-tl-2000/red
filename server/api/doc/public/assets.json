{
  "swagger": "2.0",
  "info": {
    "description": "Move your app forward with the Reva API. In order to generate the api_key please perform a login with swagger and copy the returned token in the api_key textbox at the top.",
    "title": "Reva API",
    "version": "1.0.0"
  },

  "paths": {
    "/images/{assetType}/{entityId}": {
      "get": {
        "parameters": [
          {
            "description": "The asset type",
            "in": "path",
            "name": "assetType",
            "required": true,
            "type": "string"
          },
          {
            "description": "The entity id which the asset is requested",
            "in": "path",
            "name": "entityId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "301": {
            "description": "Redirect to the asset url"
          },
          "404": {
            "description": "Invalid/missing parameter",
            "schema": {
              "$ref": "../commons.json#/definitions/Error"
            }
          }
        },
        "summary": "Returns the asset url",
        "tags": [
          "Assets"
        ]
      }
    },
    "/marketing/assets/global/{pathToFile}": {
      "get": {
        "parameters": [
          {
            "description": "The file name or a path to file",
            "in": "path",
            "name": "pathToFile",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "301": {
            "description": "Redirect to the asset url"
          },
          "404": {
            "description": "Invalid/missing parameter",
            "schema": {
              "$ref": "../commons.json#/definitions/Error"
            }
          }
        },
        "summary": "Returns the global asset url",
        "tags": [
          "Assets"
        ]
      }
    },
    "/marketing/assets/{propertyName}/{pathToFile}": {
      "get": {
        "parameters": [
          {
            "description": "The property name",
            "in": "path",
            "name": "propertyName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The file name or a path to file",
            "in": "path",
            "name": "pathToFile",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "301": {
            "description": "Redirect to the asset url"
          },
          "404": {
            "description": "Invalid/missing parameter",
            "schema": {
              "$ref": "../commons.json#/definitions/Error"
            }
          }
        },
        "summary": "Returns the property asset url",
        "tags": [
          "Assets"
        ]
      }
    },
    "/marketing/properties/sitemap": {
      "get": {
        "parameters": [
          {
            "description": "Include units in the response",
            "in": "query",
            "name": "include",
            "required": false,
            "type": "string",
            "enum": [
              "units",
              "allUnits"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "The property sitemap",
            "schema": {
              "items": {
                "$ref": "#/definitions/propertySitemap"
              },
              "type": "array",
              "xml": {
                "name": "urlset"
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "../commons.json#/definitions/Error"
            }
          }
        },
        "summary": "Returns the property asset url",
        "tags": [
          "Assets"
        ]
      }
    }
  },
  "definitions": {
    "propertySitemap": {
      "properties": {
        "propertyName": {
          "description": "the id of the layout",
          "type": "string"
        },
        "images": {
          "items": {
            "properties": {
              "imageType": {
                "description": "the assets's type",
                "type": "string"
              },
              "url": {
                "description": "the asset's url",
                "type": "string"
              },
              "caption": {
                "description": "the asset's caption",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "type": "object"
    }
  }
}
