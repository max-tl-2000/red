{
  "swagger": "2.0",
  "info": {
    "description": "Move your app forward with the Reva API. In order to generate the api_key please perform a login with swagger and copy the returned token in the api_key textbox at the top.",
    "title": "Reva API",
    "version": "1.0.0"
  },

  "paths": {
    "/blacklist": {
      "get": {
        "responses": {
          "200": {
            "description": "The blacklisted contactInfos",
            "schema": {
              "$ref": "#/definitions/BlacklistItem"
            }
          }
        },
        "summary": "Retrieves all blacklisted items",
        "tags": [
          "Blacklist"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "The contact info data to be marked as spam",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "type": {
                  "description": "The contactInfo type (email, phone)",
                  "type": "string"
                },
                "value": {
                  "description": "The contactInfo value",
                  "type": "string"
                }
              },
              "required": [
                "type",
                "value"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The value was successfully added to the blacklist"
          },
          "400": {
            "description": "Invalid/missing type/value",
            "schema": {
              "$ref": "../commons.json#/definitions/Error"
            }
          }
        },
        "summary": "Adds an item to the blacklist",
        "tags": [
          "Blacklist"
        ]
      },
      "delete": {
        "parameters": [
          {
            "description": "The contact info data to be un-marked as spam",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "type": {
                  "description": "The contactInfo type (email, phone)",
                  "type": "string"
                },
                "value": {
                  "description": "The contactInfo value",
                  "type": "string"
                }
              },
              "required": [
                "type",
                "value"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The value was successfully removed from the blacklist"
          },
          "400": {
            "description": "Invalid/missing type/value",
            "schema": {
              "$ref": "../commons.json#/definitions/Error"
            }
          }
        },
        "summary": "Remove an item from the blacklist",
        "tags": [
          "Blacklist"
        ]
      }
    }
  },
  "definitions": {
    "BlacklistItem": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "persons": {
          "description": "The associated persons",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        }
      }
    }
  }
}
