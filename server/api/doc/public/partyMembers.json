{
  "swagger": "2.0",
  "info": {
    "description": "Move your app forward with the Reva API. In order to generate the api_key please perform a login with swagger and copy the returned token in the api_key textbox at the top.",
    "title": "Reva API",
    "version": "1.0.0"
  },

  "paths": {
    "/parties/{partyId}/members": {
      "get": {
        "parameters": [
          {
            "description": "The id of the party to load the members for",
            "in": "path",
            "name": "partyId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The members of the party",
            "schema": {
              "$ref": "#/definitions/PartyMember"
            }
          },
          "400": {
            "description": "Invalid party id",
            "schema": {
              "$ref": "../commons.json#/definitions/Error"
            }
          },
          "404": {
            "description": "Party not found",
            "schema": {
              "$ref": "../commons.json#/definitions/Error"
            }
          }
        },
        "summary": "Loads the party members",
        "tags": [
          "Party Members"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "The id of the party to add the member to",
            "in": "path",
            "name": "partyId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The party member object",
            "in": "body",
            "name": "partyMember",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PartyMember"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The created party member",
            "schema": {
              "$ref": "#/definitions/PartyMember"
            }
          },
          "400": {
            "description": "Invalid party id",
            "schema": {
              "$ref": "../commons.json#/definitions/Error"
            }
          },
          "404": {
            "description": "Party not found",
            "schema": {
              "$ref": "../commons.json#/definitions/Error"
            }
          }
        },
        "summary": "Creates a party member",
        "tags": [
          "Party Members"
        ]
      }
    },
    "/parties/{partyId}/members/{memberId}/linkMember": {
      "post": {
        "parameters": [
          {
            "description": "Party id of member",
            "in": "path",
            "name": "partyId",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "description": "Party member id to update",
            "in": "path",
            "name": "memberId",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "description": "List of members to link ",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "description": "List of members IDs",
              "items": {
                "type": "string",
                "format": "uuid"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Link between members was saved"
          },
          "400": {
            "description": "Invalid party id or member id",
            "schema": {
              "$ref": "../commons.json#/definitions/Error"
            }
          },
          "404": {
            "description": "Party not found or party member not found",
            "schema": {
              "$ref": "../commons.json#/definitions/Error"
            }
          }
        },
        "summary": "Link members",
        "tags": [
          "Party Members"
        ]
      }
    },
    "/parties/{partyId}/members/{memberId}": {
      "patch": {
        "parameters": [
          {
            "description": "The id of the party it belongs to",
            "in": "path",
            "name": "partyId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The id of the member to modify",
            "in": "path",
            "name": "memberId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The modified member object",
            "in": "body",
            "name": "member",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PartyMember"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The modified member",
            "schema": {
              "$ref": "#/definitions/PartyMember"
            }
          },
          "400": {
            "description": "Invalid party/member id",
            "schema": {
              "$ref": "../commons.json#/definitions/Error"
            }
          },
          "404": {
            "description": "Party/Member id not found",
            "schema": {
              "$ref": "../commons.json#/definitions/Error"
            }
          }
        },
        "summary": "Updates a party member entity",
        "tags": [
          "Party Members"
        ]
      },
      "delete": {
        "parameters": [
          {
            "description": "The id of the party it belongs to",
            "in": "path",
            "name": "partyId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The id of the member to remove from the party",
            "in": "path",
            "name": "memberId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The removed member",
            "schema": {
              "$ref": "#/definitions/PartyMember"
            }
          },
          "400": {
            "description": "Invalid party/member id",
            "schema": {
              "$ref": "../commons.json#/definitions/Error"
            }
          },
          "403": {
            "description": "Unauthorized to perform this operation",
            "schema": {
              "$ref": "../commons.json#/definitions/Error"
            }
          },
          "404": {
            "description": "Party/Member id not found",
            "schema": {
              "$ref": "../commons.json#/definitions/Error"
            }
          }
        },
        "summary": "Removes a party member from a party",
        "tags": [
          "Party Members"
        ]
      }
    },
    "/parties/{partyId}/members/{memberId}/proxyToken": {
      "post": {
        "parameters": [
          {
            "description": "The id of the party to get the impersonation token for",
            "in": "path",
            "name": "partyId",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "description": "The id of the party member to get the impersonation token for",
            "in": "path",
            "name": "memberId",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "description": "The property data to get the impersonation token for",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "propertyId": {
                  "description": "The id of the property to apply",
                  "type": "string",
                  "format": "uuid"
                },
                "quoteId": {
                  "description": "The id of the quote to apply",
                  "type": "string",
                  "format": "uuid"
                }
              },
              "required": [
                "propertyId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The impersonation token generated"
          },
          "400": {
            "description": "Invalid party id",
            "schema": {
              "$ref": "../commons.json#/definitions/Error"
            }
          },
          "404": {
            "description": "Party not found",
            "schema": {
              "$ref": "../commons.json#/definitions/Error"
            }
          }
        },
        "summary": "Loads the impersonation token",
        "tags": [
          "Party Members"
        ]
      }
    }
  },
  "definitions": {
        "PartyMember": {
      "properties": {
        "id": {
          "description": "The id of the party member",
          "type": "string"
        },
        "memberType": {
          "description": "The type of member",
          "type": "string"
        },
        "partyId": {
          "description": "The id of the party it belongs to",
          "type": "string"
        },
        "personId": {
          "description": "The id of the person",
          "type": "string"
        },
        "email": {
          "description": "the email of the member",
          "type": "object"
        },
        "phone": {
          "description": "the phone of the member",
          "type": "object"
        },
        "fullName": {
          "description": "the full name of the member",
          "type": "object"
        },
        "preferredName": {
          "description": "the preferred name of the member",
          "type": "object"
        }
      },
      "type": "object"
    }
  }
}
