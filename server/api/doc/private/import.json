{
  "swagger": "2.0",
  "info": {
    "description": "Move your app forward with the Reva API. In order to generate the api_key please perform a login with swagger and copy the returned token in the api_key textbox at the top.",
    "title": "Reva API",
    "version": "1.0.0"
  },

  "paths": {
    "/seedData": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "file",
            "in": "formData",
            "description": "Email of the user that will get the invite",
            "type": "file",
            "required": true
          },
          {
            "name": "tenantId",
            "in": "formData",
            "description": "Id of the tenant that will associate the data",
            "type": "string",
            "required": true
          },
          {
            "name": "host",
            "in": "formData",
            "description": "Current host name where the api was called",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "File updated properly and data imported"
          },
          "400": {
            "description": "Invalid/missing data",
            "schema": {
              "$ref": "../commons.json#/definitions/Error"
            }
          }
        },
        "summary": "Upload a file and seed data into the DB",
        "tags": [
          "Import"
        ]
      }
    },
    "/seedData/getFile": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "tenantId",
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid/missing parameters",
            "schema": {
              "$ref": "../commons.json#/definitions/Error"
            }
          },
          "404": {
            "description": "Not found"
          }
        },
        "summary": "Downloads a file that constains the results",
        "tags": [
          "Import"
        ]
      }
    },
    "/seedData/isReady": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "tenantId",
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid/missing parameters",
            "schema": {
              "$ref": "../commons.json#/definitions/Error"
            }
          },
          "404": {
            "description": "Not found"
          }
        },
        "summary": "Downloads a file that constains the results",
        "tags": [
          "Import"
        ]
      }
    },
    "/migrateData": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "files",
            "in": "formData",
            "description": "Files that will be migrated from other systems",
            "type": "file",
            "required": true
          },
          {
            "name": "tenantId",
            "in": "formData",
            "description": "Id of the tenant that will associate the data",
            "type": "string",
            "required": true
          },
          {
            "name": "host",
            "in": "formData",
            "description": "Current host name where the api was called",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Files converted properly"
          },
          "400": {
            "description": "Invalid/missing data",
            "schema": {
              "$ref": "../commons.json#/definitions/Error"
            }
          }
        },
        "summary": "Convert files into xlsx spreadsheet",
        "tags": [
          "Import"
        ]
      }
    },
    "/importUpdates": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "files",
            "in": "formData",
            "description": "Files that will be imported into the database from an external platform",
            "type": "file",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Files imported properly"
          },
          "400": {
            "description": "Invalid/missing data",
            "schema": {
              "$ref": "../commons.json#/definitions/Error"
            }
          }
        },
        "summary": "Upload updates from an external platform",
        "tags": [
          "Import"
        ]
      }
    },
    "/importRms": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "files",
            "in": "formData",
            "description": "Files that will converted and imported into the database",
            "type": "file",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Files imported properly"
          },
          "400": {
            "description": "Invalid/missing data",
            "schema": {
              "$ref": "../commons.json#/definitions/Error"
            }
          }
        },
        "summary": "Updates database from rms file",
        "tags": [
          "Import"
        ]
      }
    },
    "/validateAssets": {
      "get": {
        "responses": {
          "200": {
            "description": "The request was executed successfully.",
            "schema": {
              "$ref": "#/definitions/AssetValidationEntry"
            }
          }
        },
        "summary": "Validate the imported assets (images, documents) against the existing entities.",
        "tags": [
          "Import"
        ]
      }
    }
  },
  "definitions": {
    "AssetValidationEntry": {
      "type": "object",
      "properties": {
        "isValid": {
          "type": "boolean",
          "description": "True if the imported assets are linked to existing entities"
        },
        "validationErrors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    }
  }
}
